class Block 
{
	/**
	Represents a block.
	State:	0	- Blank
			1	- Border
			2	- SnakeBody
			3	- Apple
	*/
	field int m_state, m_row, m_column, m_x, m_y, m_length;
	
	constructor Block new(int row, int column, int length)
	{
		/** Initializes a new block with position (row, column) and length. */
		let m_row = row;
		let m_column = column;
		let m_length = length;
		let m_state = 0;

		let m_x = column * length;
		let m_y = row * length;
		
        return this;
    }
	
	method void dispose()
	{
		do Memory.deAlloc(this);
		return;
	}
	
	method int getRow()
	{
		return m_row;
	}
	
	method int getColumn()
	{
		return m_column;
	}
	
	method int getState()
	{
		return m_state;
	}
	
	method void setStateAndDraw(int state)
	{
		do setState(state);
		do draw();
		return;
	}
	
	method void setState(int state)
	{
		let m_state = state;
		return;
	}
	
	method void draw()
	{
		/** Draws the block, given its state. */
		if ( m_state = 0 )
		{
			do drawBlank();
			return;
		}
		if ( m_state = 1 )
		{
			do drawBorder();
			return;
		}
		if ( m_state = 2 )
		{
			do drawSnakeBody();
			return;
		}
		
		// ( m_state = 3 )
		do drawApple();
		return;
	}
	
	method void drawBlank()
	{
		do Screen.setColor(false);
        do Screen.drawRectangle(m_x, m_y, m_x + m_length - 1, m_y + m_length - 1);
		return;
	}
	
	method void drawBorder()
	{
		do Screen.setColor(true);
        do Screen.drawRectangle(m_x + 1, m_y + 1, m_x + m_length - 1, m_y + m_length - 1);
		return;
	}
	
	method void drawSnakeBody()
	{
		do Screen.setColor(true);
		do Screen.drawCircle(m_x + (m_length / 2), m_y + (m_length / 2), (m_length / 2) - 1);
		return;
	}
	
	method void drawApple()
	{
		do Screen.setColor(true);
		do Screen.drawCircle(m_x + (m_length / 2), m_y + (m_length / 2), (m_length / 3));
		return;
	}
}